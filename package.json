{
    "name": "tsce",
    "displayName": "TypeScript Code Explorer",
    "description": "Making navigating TypeScript code easier",
    "version": "2.0.36",
    "publisher": "aljazsim",
    "author": {
        "name": "aljazsim",
        "url": "https://github.com/aljazsim/"
    },
    "icon": "doc/logo.png",
    "galleryBanner": {
        "color": "#4c725d",
        "theme": "dark"
    },
    "bugs": {
        "url": "https://github.com/aljazsim/vs-code-typescript-code-explorer/issues"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/aljazsim/vs-code-typescript-code-explorer.git"
    },
    "homepage": "https://github.com/aljazsim/vs-code-typescript-code-explorer",
    "engines": {
        "vscode": "^1.89.0"
    },
    "license": "MIT",
    "categories": [
        "Other"
    ],
    "keywords": [
        "TypeScript",
        "outline",
        "navigate",
        "class view",
        "explorer",
        "members"
    ],
    "activationEvents": [
        "onLanguage:typescript",
        "onView:typescript-code-explorer"
    ],
    "contributes": {
        "configuration": [
            {
                "title": "TypesScript Code Explorer",
                "properties": {
                    "tsce.groupingAndOrder": {
                        "type": "string",
                        "description": "Specifies how code elements should be organized.",
                        "default": "group by: type, order by: type/accessor/name",
                        "enum": [
                            "none",
                            "order by: type",
                            "order by: type/name",
                            "order by: type/accessor",
                            "order by: type/accessor/name",
                            "group by: type, order by type",
                            "group by: type, order by: type/name",
                            "group by: type, order by: type/accessor",
                            "group by: type, order by: type/accessor/name",
                            "group by: type/accessor, order by: type/accessor/name"
                        ],
                        "enumDescriptions": [
                            "Elements ordered in the same sequence as in code",
                            "Elements ordered by: type",
                            "Elements ordered by: type/name",
                            "Elements ordered by: type/accessor",
                            "Elements ordered by: type/accessor/name",
                            "Elements grouped by: type and ordered ascending by type",
                            "Elements grouped by: type and ordered ascending by: type/name",
                            "Elements grouped by: type and ordered ascending by: type/accessor",
                            "Elements grouped by: type and ordered ascending by: type/accessor/name",
                            "Elements grouped by: type/accessor and ordered ascending by: type/accessor/name"
                        ]
                    },
                    "tsce.showMemberTypes": {
                        "type": "boolean",
                        "description": "Specifies if members types should be displayed.",
                        "default": true
                    },
                    "tsce.showAccessorColorCoding": {
                        "type": "boolean",
                        "description": "Specifies if elements should be displayed with different color icons for different accessor types.",
                        "default": true
                    },
                    "tsce.showStaticMemberIndicator": {
                        "type": "boolean",
                        "description": "Specifies if element icons should display letter 'S' for static members.",
                        "default": true
                    },
                    "tsce.showAbstractMemberIndicator": {
                        "type": "boolean",
                        "description": "Specifies if element icons should display letter 'A' for abstract members.",
                        "default": true
                    },
                    "tsce.showAsyncMethodIndicator": {
                        "type": "boolean",
                        "description": "Specifies if methods and functions should display a circle indicator for async methods and functions.",
                        "default": true
                    },
                    "tsce.showMemberCount": {
                        "type": "boolean",
                        "description": "Specifies if member count should be displayed when grouping member.",
                        "default": true
                    },
                    "tsce.showReadonlyPropertiesAsConst": {
                        "type": "boolean",
                        "description": "Specifies if readonly properties should be treated as constants.",
                        "default": true
                    },
                    "tsce.showConstVariablesAsConst": {
                        "type": "boolean",
                        "description": "Specifies if readonly variables should be treated as constants.",
                        "default": true
                    },
                    "tsce.showArrowFunctionPropertiesAsMethods": {
                        "type": "boolean",
                        "description": "Specifies if arrow function properties should be treated as methods.",
                        "default": false
                    },
                    "tsce.showArrowFunctionReadOnlyPropertiesAsMethods": {
                        "type": "boolean",
                        "description": "Specifies if readonly arrow function properties should be treated as methods.",
                        "default": true
                    },
                    "tsce.showArrowFunctionVariablesAsMethods": {
                        "type": "boolean",
                        "description": "Specifies if arrow function variables should be treated as functions.",
                        "default": false
                    },
                    "tsce.showArrowFunctionConstVariablesAsMethods": {
                        "type": "boolean",
                        "description": "Specifies if const arrow function variables should be treated as functions.",
                        "default": true
                    }
                }
            }
        ],
        "commands": [
            {
                "command": "tsce.showCodeExplorer",
                "title": "Show Code Explorer",
                "category": "TypeScript Code Explorer",
                "when": "editorTextFocus && editorLangId == typescript"
            }
        ],
        "menus": {
            "editor/context": [
                {
                    "command": "tsce.showCodeExplorer",
                    "group": "navigation",
                    "when": "editorTextFocus && editorLangId == typescript"
                }
            ]
        },
        "keybindings": [
            {
                "command": "tsce.showCodeExplorer",
                "key": "ctrl+shift+k",
                "mac": "cmd+alt+k",
                "when": "editorTextFocus && editorLangId == typescript"
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "typescript-code-explorer",
                    "title": "TypeScript",
                    "icon": "resources/view.svg",
                    "when": ""
                }
            ]
        },
        "views": {
            "typescript-code-explorer": [
                {
                    "id": "tsce.codeExplorer",
                    "name": "Code Explorer"
                }
            ]
        },
        "languages": [
            {
                "id": "typescript",
                "extensions": [
                    ".ts"
                ]
            }
        ]
    },
    "main": "./out/extension.js",
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "pretest": "npm run compile && npm run lint",
        "lint": "eslint src --ext ts",
        "test": "vscode-test"
    },
    "devDependencies": {
        "@types/vscode": "^1.89.0",
        "@types/mocha": "^10.0.6",
        "@types/node": "18.x",
        "@typescript-eslint/eslint-plugin": "^7.7.1",
        "@typescript-eslint/parser": "^7.7.1",
        "eslint": "^8.57.0",
        "@vscode/test-cli": "^0.0.9",
        "@vscode/test-electron": "^2.3.9",
        "vscode": "*"
    },
    "dependencies": {
        "typescript": "^5.4.5"
    }
}
